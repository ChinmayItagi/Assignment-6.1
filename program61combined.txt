// Driver class for the combined all the map program


import org.apache.hadoop.fs.Path; 
import org.apache.hadoop.conf.*;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat; 
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat; 
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat; 
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;

public class driver61 {
	@SuppressWarnings("deprecation")
	public static void main(String[] args) throws Exception {
		Configuration conf = new Configuration();
		Job job = new Job(conf, "DemoTask1");
		job.setJarByClass(driver61.class);

		job.setMapOutputKeyClass(Text.class);
		job.setMapOutputValueClass(IntWritable.class);

		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(IntWritable.class);
		job.setMapperClass(map61.class);
		job.setReducerClass(reduce61.class);
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(TextOutputFormat.class);

		FileInputFormat.addInputPath(job, new Path(args[0])); 
		FileOutputFormat.setOutputPath(job,new Path(args[1]));
		
		
		
		job.waitForCompletion(true);// wait for the job to end
		
		Job job1 = new Job(conf, "DemoTask2");
		job1.setJarByClass(driver61.class);

		job1.setMapOutputKeyClass(Text.class);
		job1.setMapOutputValueClass(IntWritable.class);

		job1.setOutputKeyClass(Text.class);
		job1.setOutputValueClass(IntWritable.class);
		job1.setMapperClass(map61b.class);
		job1.setReducerClass(reduce61.class);
		job1.setInputFormatClass(TextInputFormat.class);
		job1.setOutputFormatClass(TextOutputFormat.class);

		FileInputFormat.addInputPath(job1, new Path(args[0])); 
		FileOutputFormat.setOutputPath(job1,new Path(args[2]));
		
		
		
		job1.waitForCompletion(true);// wait for the job to end

		
		Job job2 = new Job(conf, "DemoTask3");
		job2.setJarByClass(driver61.class);

		job2.setMapOutputKeyClass(Text.class);
		job2.setMapOutputValueClass(IntWritable.class);

		job2.setOutputKeyClass(Text.class);
		job2.setOutputValueClass(IntWritable.class);
		job2.setMapperClass(map61c.class);
		job2.setReducerClass(reduce61.class);
		job2.setInputFormatClass(TextInputFormat.class);
		job2.setOutputFormatClass(TextOutputFormat.class);

		FileInputFormat.addInputPath(job2, new Path(args[0])); 
		FileOutputFormat.setOutputPath(job2,new Path(args[3]));
		
		
		
		job2.waitForCompletion(true);// wait for the job to end

		
			}}



//command for execution

chinmay@Chinmay-ThinkPad-E460:~/Desktop$ hadoop jar 61.jar /user/chins/travel.txt /user/chins/output/61aop1 /user/chins/output/61bop1 /user/chins/output/61cop1


// output

chinmay@Chinmay-ThinkPad-E460:~/Desktop$ hadoop fs -cat /user/chins/output/61aop1/part-r-00000
Number of passenger to MIA and MCO are:	427
chinmay@Chinmay-ThinkPad-E460:~/Desktop$ hadoop fs -cat /user/chins/output/61bop1/part-r-00000
Number of passenger from MIA and HOU are:	312
chinmay@Chinmay-ThinkPad-E460:~/Desktop$ hadoop fs -cat /user/chins/output/61cop1/part-r-00000
Number of passenger to LAS and LAX are:	254


